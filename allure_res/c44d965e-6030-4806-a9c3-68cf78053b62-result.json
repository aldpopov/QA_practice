{"name": "test_products_search_get_req[product_model1]", "status": "failed", "statusDetails": {"message": "AssertionError: assert 500 == 200\n +  where 500 = <Response [500]>.status_code", "trace": "self = <pytest_fold.test_negative.TestService object at 0x0000020C27638950>\nproduct_model = {'category_id': None,\n 'created_at': 'Culture cut media factor table big outside.\\n'\n               'Foreign rise invo...otos': None,\n 'price': None,\n 'product_id': -211503433.315444,\n 'quantity': None,\n 'rating': None,\n 'updated_at': None}\nservice_api = <pytest_fold.conftest.ApiClient object at 0x0000020C27C3BBF0>\n\n    @allure.feature('Search for product')\n    @allure.description('Search for product by description or name')\n    def test_products_search_get_req(self, product_model, service_api):\n>       super().products_search_get_req(product_model, service_api)\n\npytest_fold\\test_negative.py:46: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nproduct_model = {'category_id': None,\n 'created_at': 'Culture cut media factor table big outside.\\n'\n               'Foreign rise invo...otos': None,\n 'price': None,\n 'product_id': -211503433.315444,\n 'quantity': None,\n 'rating': None,\n 'updated_at': None}\nservice_api = <pytest_fold.conftest.ApiClient object at 0x0000020C27C3BBF0>\n\n    @staticmethod\n    def products_search_get_req(product_model, service_api):\n        with allure.step('1. Pick parameters for search of a single product'):\n            params = {\n                'search': product_model.description,\n                'name': product_model.name,\n                'rating': product_model.rating\n            }\n        with allure.step('2. Get the product with these parameters: {}'.format(params)):\n            response = service_api.get('products/search', params=params)\n        with allure.step('3. Check if status code of the response is equal to 200'):\n>           assert response.status_code == 200\nE           assert 500 == 200\nE            +  where 500 = <Response [500]>.status_code\n\nsrc\\base_test_case\\test_microservice.py:45: AssertionError"}, "description": "Search for product by description or name", "steps": [{"name": "1. Pick parameters for search of a single product", "status": "passed", "start": 1720471602385, "stop": 1720471602385}, {"name": "2. Get the product with these parameters: {'search': None, 'name': None, 'rating': None}", "status": "passed", "start": 1720471602385, "stop": 1720471602489}, {"name": "3. Check if status code of the response is equal to 200", "status": "failed", "statusDetails": {"message": "AssertionError: assert 500 == 200\n +  where 500 = <Response [500]>.status_code\n", "trace": "  File \"D:\\Git\\Go-Kafka-gRPC-MongoDB-microservice\\tests\\src\\base_test_case\\test_microservice.py\", line 45, in products_search_get_req\n    assert response.status_code == 200\n"}, "start": 1720471602489, "stop": 1720471602489}], "parameters": [{"name": "product_model", "value": "{'category_id': None,\n 'created_at': 'Culture cut media factor table big outside.\\n'\n               'Foreign rise involve. Remember military thus sense choose '\n               'street.',\n 'description': None,\n 'image_url': None,\n 'name': None,\n 'photos': None,\n 'price': None,\n 'product_id': -211503433.315444,\n 'quantity': None,\n 'rating': None,\n 'updated_at': None}"}], "start": 1720471602385, "stop": 1720471602490, "uuid": "e684a9dd-bed5-4aa8-947e-6379a4e1e6fb", "historyId": "e4c7242a866b1ec43cc86e9c11d054c1", "testCaseId": "09ef55b9e3199d3d02a7f3a16e3120dd", "fullName": "pytest_fold.test_negative.TestService#test_products_search_get_req", "labels": [{"name": "feature", "value": "Search for product"}, {"name": "story", "value": "Testing with incorrect inputs and type violations"}, {"name": "severity", "value": "normal"}, {"name": "parentSuite", "value": "pytest_fold"}, {"name": "suite", "value": "test_negative"}, {"name": "subSuite", "value": "TestService"}, {"name": "host", "value": "Sanua-PC"}, {"name": "thread", "value": "1632-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "pytest_fold.test_negative"}]}