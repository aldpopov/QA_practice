{"name": "test_products_post_req[product_model1]", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 201\n +  where 400 = <Response [400]>.status_code", "trace": "self = <pytest_fold.test_negative.TestService object at 0x0000020C2719D9D0>\nproduct_model = {'category_id': None,\n 'created_at': 'Culture cut media factor table big outside.\\n'\n               'Foreign rise invo...otos': None,\n 'price': None,\n 'product_id': -211503433.315444,\n 'quantity': None,\n 'rating': None,\n 'updated_at': None}\nservice_api = <pytest_fold.conftest.ApiClient object at 0x0000020C2719FB30>\n\n    @allure.feature('Post new product')\n    @allure.description('Create new single product')\n    def test_products_post_req(self, product_model, service_api):\n>       super().products_post_req(product_model, service_api)\n\npytest_fold\\test_negative.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nproduct_model = {'category_id': None,\n 'created_at': 'Culture cut media factor table big outside.\\n'\n               'Foreign rise invo...otos': None,\n 'price': None,\n 'product_id': -211503433.315444,\n 'quantity': None,\n 'rating': None,\n 'updated_at': None}\nservice_api = <pytest_fold.conftest.ApiClient object at 0x0000020C2719FB30>\n\n    @staticmethod\n    def products_post_req(product_model, service_api):\n        with allure.step('1. Create model of a single product'):\n            product = product_model\n        with allure.step('2. Post the product created during the previous step'):\n            response = service_api.post('products', data=json.dumps(dict(product)))\n        with allure.step('3. Check if status code of the response is equal to 201'):\n>           assert response.status_code == 201\nE           assert 400 == 201\nE            +  where 400 = <Response [400]>.status_code\n\nsrc\\base_test_case\\test_microservice.py:14: AssertionError"}, "description": "Create new single product", "steps": [{"name": "1. Create model of a single product", "status": "passed", "start": 1720471601699, "stop": 1720471601699}, {"name": "2. Post the product created during the previous step", "status": "passed", "start": 1720471601699, "stop": 1720471601809}, {"name": "3. Check if status code of the response is equal to 201", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 201\n +  where 400 = <Response [400]>.status_code\n", "trace": "  File \"D:\\Git\\Go-Kafka-gRPC-MongoDB-microservice\\tests\\src\\base_test_case\\test_microservice.py\", line 14, in products_post_req\n    assert response.status_code == 201\n"}, "start": 1720471601809, "stop": 1720471601809}], "parameters": [{"name": "product_model", "value": "{'category_id': None,\n 'created_at': 'Culture cut media factor table big outside.\\n'\n               'Foreign rise involve. Remember military thus sense choose '\n               'street.',\n 'description': None,\n 'image_url': None,\n 'name': None,\n 'photos': None,\n 'price': None,\n 'product_id': -211503433.315444,\n 'quantity': None,\n 'rating': None,\n 'updated_at': None}"}], "start": 1720471601699, "stop": 1720471601810, "uuid": "d2860152-3a2b-4a27-bdae-c0a592a45ed8", "historyId": "a28664b6123318bd30d0d736b1ede943", "testCaseId": "301b2033dd6da3df8d6159eea89a18f7", "fullName": "pytest_fold.test_negative.TestService#test_products_post_req", "labels": [{"name": "severity", "value": "normal"}, {"name": "story", "value": "Testing with incorrect inputs and type violations"}, {"name": "feature", "value": "Post new product"}, {"name": "parentSuite", "value": "pytest_fold"}, {"name": "suite", "value": "test_negative"}, {"name": "subSuite", "value": "TestService"}, {"name": "host", "value": "Sanua-PC"}, {"name": "thread", "value": "1632-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "pytest_fold.test_negative"}]}